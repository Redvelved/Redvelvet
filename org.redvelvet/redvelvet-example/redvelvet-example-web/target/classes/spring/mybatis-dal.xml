<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
     
	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${redvelvet.datasource.jdbcUrl}" />
		<property name="username" value="${redvelvet.datasource.username}" />
		<property name="password" value="${redvelvet.datasource.password}" />
		<property name="idleConnectionTestPeriodInMinutes" value="5" />
		<property name="idleMaxAgeInMinutes" value="2" />
		<property name="maxConnectionsPerPartition" value="100" />
		<property name="minConnectionsPerPartition" value="5" />
		<property name="partitionCount" value="3" />
		<property name="acquireIncrement" value="5" />
		<property name="statementsCacheSize" value="100" />
		<property name="releaseHelperThreads" value="8" />
		<property name="connectionTestStatement" value="select 1 from dual" />
	</bean>
	
	<!-- 设置 sqlSessionFactory -->
	<bean id="sqlSessionFactory" name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--mybatis配置文件路径 -->
		<property name="configLocation" value="classpath:spring/mybatis-config.xml" /> 
		<!--mybatis mapper文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:sqlmap/generator/*.xml</value>
			</array>
		</property>
	</bean>

    <!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="redvelvet.example.dao" />
		<!-- 多个数据源 需配置sqlSessionFactory(当然需要 多个org.mybatis.spring.mapper.MapperScannerConfigurer)-->
		<!-- <property name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
		
		<!-- 避免sqlSessionFactory注入的时候 占位符 未转化的问题 /> -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	

	<!-- 事务配置 start -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="check*" propagation="REQUIRED" />
			<tx:method name="*Transaction" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* redvelvet.example.service..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
	
	<!-- 事务配置 end -->
	
	

	<!-- 配置使Spring采用CGLIB代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 启用对事务注解的支持 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

</beans>